#!/bin/bash
#SBATCH -p core
#SBATCH -A core
#SBATCH -w jackson
#SBATCH --error=busco3.err
#SBATCH --output=busco3.out
#SBATCH --job-name=busco3
#SBATCH --mem=60G
#SBATCH -n 50

#source /local/cluster/busco/activate.sh
#busco -i rerun_scaffolds_final.fa -l ./busco_downloads/lineages/primates_odb10 -o busco_HiC-final -m geno -f --offline -c 20
#busco -i GCF_020740605.2_mLemCat1.pri_genomic.fna -l ./busco_downloads/lineages/primates_odb10 -o busco_lemcat -m geno -f --offline -c 20
#busco -i GCA_028534055.1_Eulemur_mongoz_HiC_genomic.fna -l ./busco_downloads/lineages/primates_odb10 -o busco_mongoz -m geno -f --offline -c 20


source /local/cluster/busco/activate.sh
busco -i E_rufifrons_noMT.fna -l primates_odb10 -c 20 -o Eulemur_rufifrons-GCA_041146395.1 -m geno -f --offline
busco -i GCA_028534055.1_Eulemur_mongoz_HiC_genomic.fna -l ./busco_downloads/lineages/primates_odb10 -o Eulemur_mongoz-GCA_028534055.1 -m geno -f --offline -c 20
busco -i GCA_001262655.1_Emacaco_refEf_BWA_oneround_genomic.fa -l primates_odb10 -c 20 -o Eulemur_macaco-GCA_001262655.1 -m geno -f --offline
busco -i GCA_001262665.1_Eflavifronsk33QCA_genomic.fa -l primates_odb10 -c 20 -o Eulemur_flavifrons -m geno -f --offline
busco -i GCA_004027275.1_EulFul_v1_BIUU_genomic.fa -l primates_odb10 -c 20 -o Eulemur_fulvus-GCA_004027275.1 -m geno -f --offline
busco -i GCA_963574995.1_PGDP_EulFla_genomic.fa -l primates_odb10 -c 20 -o Eulemur_flavifrons-GCA_963574995.1 -m geno -f --offline
busco -i GCA_963573435.1_PGDP_EulAlb_genomic.fa -l primates_odb10 -c 20 -o Eulemur_albifrons -m geno -f --offline
busco -i GCA_963573705.1_PGDP_EulSan_genomic.fa -l primates_odb10 -c 20 -o Eulemur_sanfordi  -m geno -f --offline
busco -i GCA_963574465.1_PGDP_EulRuf_genomic.fa -l primates_odb10 -c 20 -o Eulemur_rufus -m geno -f --offline
busco -i GCA_963574475.1_PGDP_EulMon_genomic.fa -l primates_odb10 -c 20 -o Eulemur_mongoz-GCA_963574475.1 -m geno -f --offline
busco -i GCA_963574895.1_PGDP_EulRub_genomic.fa -l primates_odb10 -c 20 -o Eulemur_rubriventer -m geno -f --offline
busco -i GCA_963574945.1_PGDP_EulMac_genomic.fa -l primates_odb10 -c 20 -o Eulemur_macaco-GCA_963574945.1 -m geno -f --offline
busco -i GCA_963574965.1_PGDP_EulCor_genomic.fa -l primates_odb10 -c 20 -o Eulemur_coronatus -m geno -f --offline
busco -i GCA_963575015.1_PGDP_EulCol_genomic.fa -l primates_odb10 -c 20 -o Eulemur_fulvus_collaris -m geno -f --offline
busco -i GCF_020740605.2_mLemCat1.pri_genomic.fa -l primates_odb10 -c 20 -o Lemur_cata -m geno -f --offline
busco -i GCA_963573725.1_PGDP_EulFul_genomic.fa -l primates_odb10 -c 50 -o Eulemur_fulvus-GCA_963573725.1 -m geno -f --offline
busco -i Eulemur_rufifrons-NA.fa -l primates_odb10 -c 50 -o Eulemur_rufifrons-NA -m geno -f --offline
cp *lemur/*txt PLOT
python3 /local/cluster/busco-5.4.3/bin/generate_plot.py -wd PLOT



#modified BUSCO Rscript for plotting below


######################################
#
# BUSCO summary figure
# @version 4.0.0
# @since BUSCO 2.0.0
# 
# Copyright (c) 2016-2022, Evgeny Zdobnov (ez@ezlab.org)
# Licensed under the MIT license. See LICENSE.md file.
#
######################################

# Load the required libraries
library(ggplot2)
library("grid")
library(svglite)
# !!! CONFIGURE YOUR PLOT HERE !!! 
# Output
my_output <- paste("./","busco_figure.svg",sep="/") 
my_width <- 20
my_height <- 15
my_unit <- "cm"

# Colors
my_colors <- c("#56B4E9", "#3492C7", "#F0E442", "#F04442")
# Bar height ratio
my_bar_height <- 0.75

# Legend
my_title <- "BUSCO Assessment Results"

# Font
my_family <- "sans"
my_size_ratio <- 1

# !!! SEE YOUR DATA HERE !!! 
# Your data as generated by python, remove or add more
my_species <- c('Eulemur_fulvus_collaris', 'Eulemur_fulvus_collaris', 'Eulemur_fulvus_collaris', 'Eulemur_fulvus_collaris', 'Eulemur_fulvus-GCA_963573725', 'Eulemur_fulvus-GCA_963573725', 'Eulemur_fulvus-GCA_963573725', 'Eulemur_fulvus-GCA_963573725', 'Eulemur_flavifrons-GCA_963574995', 'Eulemur_flavifrons-GCA_963574995', 'Eulemur_flavifrons-GCA_963574995', 'Eulemur_flavifrons-GCA_963574995', 'Eulemur_mongoz-GCA_963574475', 'Eulemur_mongoz-GCA_963574475', 'Eulemur_mongoz-GCA_963574475', 'Eulemur_mongoz-GCA_963574475', 'Eulemur_macaco-GCA_001262655', 'Eulemur_macaco-GCA_001262655', 'Eulemur_macaco-GCA_001262655', 'Eulemur_macaco-GCA_001262655', 'Eulemur_fulvus-GCA_004027275', 'Eulemur_fulvus-GCA_004027275', 'Eulemur_fulvus-GCA_004027275', 'Eulemur_fulvus-GCA_004027275', 'Eulemur_rufifrons-GCA_041146395', 'Eulemur_rufifrons-GCA_041146395', 'Eulemur_rufifrons-GCA_041146395', 'Eulemur_rufifrons-GCA_041146395', 'Eulemur_sanfordi', 'Eulemur_sanfordi', 'Eulemur_sanfordi', 'Eulemur_sanfordi', 'Eulemur_rufifrons-NA', 'Eulemur_rufifrons-NA', 'Eulemur_rufifrons-NA', 'Eulemur_rufifrons-NA', 'Eulemur_albifrons', 'Eulemur_albifrons', 'Eulemur_albifrons', 'Eulemur_albifrons', 'Eulemur_flavifrons-GCA_001262665', 'Eulemur_flavifrons-GCA_001262665', 'Eulemur_flavifrons-GCA_001262665', 'Eulemur_flavifrons-GCA_001262665', 'Lemur_catta', 'Lemur_catta', 'Lemur_catta', 'Lemur_catta', 'Eulemur_macaco-GCA_963574945', 'Eulemur_macaco-GCA_963574945', 'Eulemur_macaco-GCA_963574945', 'Eulemur_macaco-GCA_963574945', 'Eulemur_mongoz-GCA_028534055', 'Eulemur_mongoz-GCA_028534055', 'Eulemur_mongoz-GCA_028534055', 'Eulemur_mongoz-GCA_028534055', 'Eulemur_rubriventer', 'Eulemur_rubriventer', 'Eulemur_rubriventer', 'Eulemur_rubriventer', 'Eulemur_rufus', 'Eulemur_rufus', 'Eulemur_rufus', 'Eulemur_rufus', 'Eulemur_coronatus', 'Eulemur_coronatus', 'Eulemur_coronatus', 'Eulemur_coronatus')
my_species <- factor(my_species)
my_species <- factor(my_species,levels(my_species)[c(length(levels(my_species)):1)]) # reorder your species here just by changing the values in the vector :
my_percentage <- c(58.4, 0.8, 10.2, 30.6, 54.1, 0.9, 10.7, 34.3, 57.9, 0.8, 10.4, 30.9, 58.8, 0.8, 10.5, 29.9, 89.2, 0.9, 2.8, 7.1, 57.2, 1.5, 10.4, 30.9, 93.7, 1.6, 0.7, 4.0, 55.3, 0.8, 10.6, 33.3, 91.6, 1.5, 1.4, 5.5, 55.3, 0.8, 10.7, 33.2, 88.6, 1.0, 2.6, 7.8, 92.7, 1.2, 0.8, 5.3, 57.6, 0.9, 10.4, 31.1, 83.0, 1.6, 3.7, 11.7, 56.8, 0.8, 10.5, 31.9, 55.8, 0.8, 10.5, 32.9, 60.3, 0.8, 10.7, 28.2)
my_values <- c(8048, 104, 1405, 4223, 7459, 126, 1481, 4714, 7979, 117, 1430, 4254, 8105, 110, 1453, 4112, 12292, 118, 384, 986, 7889, 200, 1431, 4260, 12905, 217, 97, 561, 7623, 117, 1467, 4573, 12617, 208, 197, 758, 7625, 106, 1472, 4577, 12204, 136, 364, 1076, 12779, 170, 104, 727, 7931, 123, 1440, 4286, 11432, 222, 506, 1620, 7828, 113, 1451, 4388, 7688, 116, 1446, 4530, 8307, 117, 1468, 3888)

######################################
######################################
######################################
# Code to produce the graph
labsize = 1
if (length(levels(my_species)) > 10){
 labsize = 0.66
}
print("Plotting the figure ...")
category <- c(rep(c("S","D","F","M"),c(1)))
category <-factor(category)
category = factor(category,levels(category)[c(4,1,2,3)])
df = data.frame(my_species,my_percentage,my_values,category)
df_sorting = df[seq(1, nrow(df), 4), ]#NEW
df_sorting = df_sorting[order(df_sorting$my_percentage, decreasing=FALSE),] #NEW
df$my_species <- factor(df$my_species, levels = df_sorting$my_species) #NEW

figure <- ggplot() + 
  
  geom_bar(aes(y = my_percentage, x = my_species, fill = category), position = position_stack(reverse = TRUE), data = df, stat="identity", width=my_bar_height) + 
  coord_flip() + 
  theme_gray(base_size = 8) + 
  scale_y_continuous(labels = c("0","20","40","60","80","100"), breaks = c(0,20,40,60,80,100)) + 
  scale_fill_manual(values = my_colors,labels =c(" Complete (C) and single-copy (S)  ",
                                                 " Complete (C) and duplicated (D)",
                                                 " Fragmented (F)  ",
                                                 " Missing (M)")) +   
  ggtitle(my_title) + 
  xlab("") + 
  ylab("\n%BUSCOs") + 

  theme(plot.title = element_text(family=my_family, hjust=0.5, colour = "black", size = rel(2.2)*my_size_ratio, face = "bold")) + 
  theme(legend.position="top",legend.title = element_blank()) + 
  theme(legend.text = element_text(family=my_family, size = rel(1.2)*my_size_ratio)) + 
  theme(panel.background = element_rect(color="#FFFFFF", fill="white")) + 
  theme(panel.grid.minor = element_blank()) + 
  theme(panel.grid.major = element_blank()) +
  theme(axis.text.y = element_text(family=my_family, colour = "black", size = rel(1.66)*my_size_ratio)) + 
  theme(axis.text.x = element_text(family=my_family, colour = "black", size = rel(1.66)*my_size_ratio)) + 
  theme(axis.line = element_line(size=1*my_size_ratio, colour = "black")) + 
  theme(axis.ticks.length = unit(.85, "cm")) + 
  theme(axis.ticks.y = element_line(colour="white", size = 0)) + 
  theme(axis.ticks.x = element_line(colour="#222222")) + 
  theme(axis.ticks.length = unit(0.4, "cm")) + 
  theme(axis.title.x = element_text(family=my_family, size=rel(1.2)*my_size_ratio)) + 
  
  guides(fill = guide_legend(override.aes = list(colour = NULL))) +
  guides(fill=guide_legend(nrow=2,byrow=TRUE))
  
  for(i in rev(c(1:length(levels(my_species))))){
    detailed_values <- my_values[my_species==my_species[my_species==levels(my_species)[i]]]
    total_buscos <- sum(detailed_values)
    figure <- figure + 
    annotate("text", label=paste("C:", detailed_values[1] + detailed_values[2], " [S:", detailed_values[1], ", D:", detailed_values[2], "], F:", detailed_values[3], ", M:", detailed_values[4], ", n:", total_buscos, sep=""), 
             y=3, x = i, size = labsize*4*my_size_ratio, colour = "black", hjust=0, family=my_family)
  }
  
ggsave(figure, file=my_output, width = my_width, height = my_height, unit = my_unit)
print("Done")
